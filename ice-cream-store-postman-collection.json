{
	"info": {
		"_postman_id": "ice-cream-store-api",
		"name": "üç¶ Ice Cream Store API Collection",
		"description": "Complete API collection for the Ice Cream Store microservices system. This collection includes all endpoints across Gateway, Session, Orders, Inventory, and Expense services. The session service uses database-backed session storage for improved persistence and performance.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "ice-cream-store"
	},
	"variable": [
		{
			"key": "gateway_url",
			"value": "http://localhost:8082",
			"type": "string"
		},
		{
			"key": "session_service_url",
			"value": "http://localhost:8081",
			"type": "string"
		},
		{
			"key": "orders_service_url",
			"value": "http://localhost:8083",
			"type": "string"
		},
		{
			"key": "inventory_service_url",
			"value": "http://localhost:8084",
			"type": "string"
		},
		{
			"key": "invoice_service_url",
			"value": "http://localhost:8085",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "session_id",
			"value": "",
			"type": "string"
		},
		{
								"key": "invoice_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "üåê Gateway Service (Port 8082)",
			"item": [
				{
					"name": "Gateway Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/api/health",
							"host": ["{{gateway_url}}"],
							"path": ["api", "health"]
						},
						"description": "Check gateway service health status"
					}
				}
			],
			"description": "Gateway service endpoints - main entry point for all API requests"
		},
		{
			"name": "üîê Session Service (via Gateway)",
			"item": [
				{
					"name": "Public Endpoints",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const response = pm.response.json();",
											"    if (response.token) {",
											"        pm.collectionVariables.set('auth_token', response.token);",
											"        console.log('Auth token saved:', response.token);",
											"    }",
											"    if (response.session_id) {",
											"        pm.collectionVariables.set('session_id', response.session_id);",
											"        console.log('Session ID saved:', response.session_id);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin123\"\n}"
								},
								"url": {
									"raw": "{{gateway_url}}/api/v1/sessions/p/login",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "sessions", "p", "login"]
								},
								"description": "Login with username and password. Creates a database-backed session and automatically saves auth token and session ID to collection variables."
							}
						},
						{
							"name": "Auth Health Check",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{gateway_url}}/api/v1/sessions/p/health",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "sessions", "p", "health"]
								},
								"description": "Check session service health status"
							}
						}
					],
					"description": "Public session endpoints (no token required) - creates database-backed sessions"
				},
				{
					"name": "Protected Endpoints",
					"item": [
						{
							"name": "Logout",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
											"url": {
				"raw": "{{gateway_url}}/api/v1/sessions/logout",
				"host": ["{{gateway_url}}"],
				"path": ["api", "v1", "sessions", "logout"]
			},
								"description": "Logout and revoke current session from database"
							}
						},
						{
							"name": "Refresh Token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/sessions/refresh",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "sessions", "refresh"]
								},
								"description": "Refresh JWT token if within refresh threshold"
							}
						},
						{
							"name": "Validate Session (by Token)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"{{auth_token}}\"\n}"
								},
								"url": {
									"raw": "{{gateway_url}}/api/v1/sessions/p/validate",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "sessions", "p", "validate"]
								},
								"description": "Validate a JWT token against database-stored sessions"
							}
						},
						{
							"name": "Validate Session (by Session ID)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Session validation successful', function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.is_valid).to.be.true;",
											"    console.log('Session validation result:', response);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"session_id\": \"{{session_id}}\"\n}"
								},
								"url": {
									"raw": "{{gateway_url}}/api/v1/sessions/p/validate",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "sessions", "p", "validate"]
								},
								"description": "Validate a session using session ID (more efficient than token validation). Requires session_id to be set from a previous login."
							}
						},
						{
							"name": "User Profile",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/sessions/profile",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "sessions", "profile"]
								},
								"description": "Get current user profile information"
							}
						},
						{
							"name": "Token Info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/sessions/token-info",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "sessions", "token-info"]
								},
								"description": "Get detailed token information and metadata"
							}
						},
						{
							"name": "Get Session Statistics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/sessions/stats",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "sessions", "stats"]
								},
								"description": "Get session statistics and analytics"
							}
						},
						{
							"name": "Get User Sessions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/sessions/user/:userId",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "sessions", "user", ":userId"],
									"variable": [
										{
											"key": "userId",
											"value": "user-uuid",
											"description": "UUID of the user"
										}
									]
								},
								"description": "Get all active sessions for a specific user"
							}
						},
						{
							"name": "Revoke Specific Session",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/sessions/:sessionId",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "sessions", ":sessionId"],
									"variable": [
										{
											"key": "sessionId",
											"value": "session-uuid",
											"description": "UUID of the session to revoke"
										}
									]
								},
								"description": "Revoke a specific session by ID"
							}
						},
						{
							"name": "Revoke All User Sessions",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/sessions/user/:userId?exclude_current=true",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "sessions", "user", ":userId"],
									"query": [
										{
											"key": "exclude_current",
											"value": "true",
											"description": "Whether to exclude the current session from revocation"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "user-uuid",
											"description": "UUID of the user"
										}
									]
								},
								"description": "Revoke all sessions for a user (optionally excluding current session)"
							}
						}
					],
					"description": "Protected session endpoints (token required) - manages database-stored sessions"
				}
			],
			"description": "Session service endpoints for authentication and database-backed session management. All sessions are stored in PostgreSQL for persistence and better performance."
		},
		{
			"name": "üì¶ Orders Management (via Gateway)",
			"item": [
				{
					"name": "Orders Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/api/v1/orders/p/health",
							"host": ["{{gateway_url}}"],
							"path": ["api", "v1", "orders", "p", "health"]
						},
						"description": "Check orders service health (public endpoint)"
					}
				},
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"payment_method\": \"card\",\n  \"items\": [\n    {\n      \"recipe_id\": \"vanilla-cone\",\n      \"recipe_name\": \"Vanilla Ice Cream Cone\",\n      \"quantity\": 2,\n      \"unit_price\": 3.50,\n      \"discount\": 0.00\n    },\n    {\n      \"recipe_id\": \"chocolate-sundae\",\n      \"recipe_name\": \"Chocolate Sundae\",\n      \"quantity\": 1,\n      \"unit_price\": 5.99,\n      \"discount\": 0.50\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/v1/orders",
							"host": ["{{gateway_url}}"],
							"path": ["api", "v1", "orders"]
						},
						"description": "Create a new ice cream order with items"
					}
				},
				{
					"name": "Get Order by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/v1/orders/:orderId",
							"host": ["{{gateway_url}}"],
							"path": ["api", "v1", "orders", ":orderId"],
							"variable": [
								{
									"key": "orderId",
									"value": "123e4567-e89b-12d3-a456-426614174000",
									"description": "UUID of the order"
								}
							]
						},
						"description": "Retrieve a specific order by its ID"
					}
				},
				{
					"name": "Update Order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"payment_method\": \"cash\",\n  \"status\": \"completed\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/v1/orders/:orderId",
							"host": ["{{gateway_url}}"],
							"path": ["api", "v1", "orders", ":orderId"],
							"variable": [
								{
									"key": "orderId",
									"value": "123e4567-e89b-12d3-a456-426614174000",
									"description": "UUID of the order"
								}
							]
						},
						"description": "Update an existing order"
					}
				},
				{
					"name": "Cancel Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/v1/orders/:orderId/cancel",
							"host": ["{{gateway_url}}"],
							"path": ["api", "v1", "orders", ":orderId", "cancel"],
							"variable": [
								{
									"key": "orderId",
									"value": "123e4567-e89b-12d3-a456-426614174000",
									"description": "UUID of the order"
								}
							]
						},
						"description": "Cancel a specific order"
					}
				},
				{
					"name": "List Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/v1/orders?status=pending&limit=10&offset=0",
							"host": ["{{gateway_url}}"],
							"path": ["api", "v1", "orders"],
							"query": [
								{
									"key": "status",
									"value": "pending",
									"description": "Filter by order status (pending, completed, cancelled)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of orders to return"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Number of orders to skip"
								}
							]
						},
						"description": "List orders with optional filtering"
					}
				},
				{
					"name": "Get Order Summary (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/v1/orders/summary",
							"host": ["{{gateway_url}}"],
							"path": ["api", "v1", "orders", "summary"]
						},
						"description": "Get order statistics and summary (admin only)"
					}
				},
				{
					"name": "Get Payment Method Stats (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/v1/orders/stats/payment-methods",
							"host": ["{{gateway_url}}"],
							"path": ["api", "v1", "orders", "stats", "payment-methods"]
						},
						"description": "Get payment method usage statistics (admin only)"
					}
				}
			],
			"description": "Orders management endpoints for ice cream orders"
		},
		{
			"name": "üì¶ Inventory Management (via Gateway)",
			"item": [
				{
					"name": "Inventory Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/api/v1/inventory/p/health",
							"host": ["{{gateway_url}}"],
							"path": ["api", "v1", "inventory", "p", "health"]
						},
						"description": "Check inventory service health"
					}
				},
				{
					"name": "Suppliers",
					"item": [
						{
							"name": "List All Suppliers",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/inventory/suppliers",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "inventory", "suppliers"]
								},
								"description": "Get list of all suppliers"
							}
						},
						{
							"name": "Create Supplier",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Premium Dairy Co.\",\n  \"contact_info\": {\n    \"email\": \"orders@premiumdairy.com\",\n    \"phone\": \"+1-555-0123\",\n    \"address\": \"123 Dairy Lane, Farm Valley, CA 95432\"\n  },\n  \"products_supplied\": [\"milk\", \"cream\", \"cheese\"],\n  \"is_active\": true\n}"
								},
								"url": {
									"raw": "{{gateway_url}}/api/v1/inventory/suppliers",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "inventory", "suppliers"]
								},
								"description": "Create a new supplier"
							}
						},
						{
							"name": "Get Supplier by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/inventory/suppliers/:supplierId",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "inventory", "suppliers", ":supplierId"],
									"variable": [
										{
											"key": "supplierId",
											"value": "1",
											"description": "ID of the supplier"
										}
									]
								},
								"description": "Get details of a specific supplier"
							}
						},
						{
							"name": "Update Supplier",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Premium Dairy Co. Ltd.\",\n  \"contact_info\": {\n    \"email\": \"orders@premiumdairy.com\",\n    \"phone\": \"+1-555-0123\",\n    \"address\": \"456 Updated Address, Farm Valley, CA 95432\"\n  },\n  \"products_supplied\": [\"milk\", \"cream\", \"cheese\", \"butter\"],\n  \"is_active\": true\n}"
								},
								"url": {
									"raw": "{{gateway_url}}/api/v1/inventory/suppliers/:supplierId",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "inventory", "suppliers", ":supplierId"],
									"variable": [
										{
											"key": "supplierId",
											"value": "1",
											"description": "ID of the supplier"
										}
									]
								},
								"description": "Update an existing supplier"
							}
						},
						{
							"name": "Delete Supplier",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/inventory/suppliers/:supplierId",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "inventory", "suppliers", ":supplierId"],
									"variable": [
										{
											"key": "supplierId",
											"value": "1",
											"description": "ID of the supplier"
										}
									]
								},
								"description": "Delete a supplier"
							}
						}
					],
					"description": "Supplier management endpoints"
				}
			],
			"description": "Inventory management endpoints for suppliers and stock"
		},
		{
			"name": "üßæ Expense Management (via Gateway)",
			"item": [
				{
					"name": "Invoice Service Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/api/v1/expenses/p/health",
							"host": ["{{gateway_url}}"],
							"path": ["api", "v1", "expenses", "p", "health"]
						},
						"description": "Check expense service health via gateway"
					}
				},
				{
					"name": "üìÑ Invoice Management",
					"item": [
						{
							"name": "Create Invoice with Details",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"invoice_number\": \"INV-2024-001\",\n  \"transaction_date\": \"2024-01-15T10:30:00Z\",\n  \"transaction_type\": \"outcome\",\n  \"supplier_id\": \"550e8400-e29b-41d4-a716-446655440001\",\n  \"expense_category_id\": \"550e8400-e29b-41d4-a716-446655440002\",\n  \"image_url\": \"https://example.com/invoices/invoice001.jpg\",\n  \"notes\": \"Monthly ingredient purchase via gateway\",\n  \"items\": [\n    {\n      \"ingredient_id\": \"550e8400-e29b-41d4-a716-446655440003\",\n      \"detail\": \"Premium Vanilla Extract - 4oz\",\n      \"count\": 2.0,\n      \"unit_type\": \"Units\",\n      \"price\": 12.99,\n      \"expiration_date\": \"2026-01-15T00:00:00Z\"\n    },\n    {\n      \"ingredient_id\": \"550e8400-e29b-41d4-a716-446655440004\",\n      \"detail\": \"Organic Sugar - 5lb\",\n      \"count\": 1.0,\n      \"unit_type\": \"Bag\",\n      \"price\": 8.50\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{gateway_url}}/api/v1/expenses/invoices",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "expenses", "invoices"]
								},
								"description": "Create a new invoice with multiple details in a single transaction via gateway"
							}
						},
						{
							"name": "List Invoices",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/expenses/invoices?limit=10&offset=0",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "expenses", "invoices"],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of invoices to return"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Number of invoices to skip"
										},
										{
											"key": "expense_category_id",
											"value": "",
											"description": "Filter by expense category",
											"disabled": true
										},
										{
											"key": "supplier_id",
											"value": "",
											"description": "Filter by supplier",
											"disabled": true
										}
									]
								},
								"description": "Get a list of invoices with optional filtering via gateway"
							}
						},
						{
							"name": "Get Invoice by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/expenses/invoices/{{invoice_id}}",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "expenses", "invoices", "{{invoice_id}}"]
								},
								"description": "Get a specific invoice by ID via gateway"
							}
						},
						{
							"name": "Get Invoice by Number",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/expenses/invoices/number/INV-2024-001",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "expenses", "invoices", "number", "INV-2024-001"]
								},
								"description": "Get a specific invoice by invoice number via gateway"
							}
						},
						{
							"name": "Get Invoice with Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/expenses/invoices/{{invoice_id}}/items",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "expenses", "invoices", "{{invoice_id}}", "items"]
								},
								"description": "Get a invoice with all its line items via gateway"
							}
						},
						{
							"name": "Update Invoice",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"invoice_number\": \"INV-2024-001-UPDATED\",\n  \"notes\": \"Updated invoice with new notes via gateway\",\n  \"image_url\": \"https://example.com/invoices/invoice001-updated.jpg\"\n}"
								},
								"url": {
									"raw": "{{gateway_url}}/api/v1/expenses/invoices/{{invoice_id}}",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "expenses", "invoices", "{{invoice_id}}"]
								},
								"description": "Update invoice information (partial updates supported) via gateway"
							}
						},
						{
							"name": "Delete Invoice",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{gateway_url}}/api/v1/expenses/invoices/{{invoice_id}}",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "expenses", "invoices", "{{invoice_id}}"]
								},
								"description": "Delete a invoice (this will also delete all associated invoice details) via gateway"
							}
						}
					],
					"description": "Manage invoices and their line items for expense tracking via gateway"
				},
				{
					"name": "üìù Invoice Details Management",
					"item": [
						{
							"name": "Add Item to Invoice",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ingredient_id\": \"550e8400-e29b-41d4-a716-446655440005\",\n  \"detail\": \"Chocolate Chips - 2lb bag\",\n  \"count\": 1.0,\n  \"unit_type\": \"Bag\",\n  \"price\": 6.99,\n  \"expiration_date\": \"2025-06-15T00:00:00Z\"\n}"
								},
								"url": {
									"raw": "{{gateway_url}}/api/v1/expenses/invoices/{{invoice_id}}/items",
									"host": ["{{gateway_url}}"],
									"path": ["api", "v1", "expenses", "invoices", "{{invoice_id}}", "items"]
								},
								"description": "Add a new line item to an existing invoice via gateway"
							}
						}
					],
					"description": "Manage individual line items within invoices via gateway"
				}
			],
			"description": "Expense management endpoints for invoices and invoice details via gateway (requires authentication)"
		},
		{
			"name": "üîß Direct Service Access (Dev/Debug)",
			"item": [
				{
					"name": "Session Service Direct",
					"item": [
						{
							"name": "Session Service Health",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{session_service_url}}/api/v1/sessions/p/health",
									"host": ["{{session_service_url}}"],
									"path": ["api", "v1", "sessions", "p", "health"]
								},
								"description": "Direct access to session service health check"
							}
						}
					],
					"description": "Direct access to session service (port 8081)"
				},
				{
					"name": "Orders Service Direct",
					"item": [
						{
							"name": "Orders Service Health",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{orders_service_url}}/api/v1/orders/p/health",
									"host": ["{{orders_service_url}}"],
									"path": ["api", "v1", "orders", "p", "health"]
								},
								"description": "Direct access to orders service health check"
							}
						},
						{
							"name": "Orders Service Root",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{orders_service_url}}/",
									"host": ["{{orders_service_url}}"],
									"path": [""]
								},
								"description": "Orders service root endpoint with service info"
							}
						}
					],
					"description": "Direct access to orders service (port 8083)"
				},
				{
					"name": "Inventory Service Direct",
					"item": [
						{
							"name": "Inventory Service Health",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{inventory_service_url}}/api/v1/inventory/p/health",
									"host": ["{{inventory_service_url}}"],
									"path": ["api", "v1", "inventory", "p", "health"]
								},
								"description": "Direct access to inventory service health check"
							}
						}
					],
					"description": "Direct access to inventory service (port 8084)"
				},
				{
					"name": "üßæ Invoice Service (Port 8085)",
					"item": [
						{
							"name": "Invoice Service Health",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{invoice_service_url}}/health",
									"host": ["{{invoice_service_url}}"],
									"path": ["health"]
								},
								"description": "Check expense service health status"
							}
						},
						{
							"name": "üìÑ Invoice Management",
							"item": [
								{
									"name": "Create Invoice with Items",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"invoice_number\": \"INV-2024-001\",\n  \"transaction_date\": \"2024-01-15T10:30:00Z\",\n  \"transaction_type\": \"outcome\",\n  \"supplier_id\": \"550e8400-e29b-41d4-a716-446655440001\",\n  \"expense_category_id\": \"550e8400-e29b-41d4-a716-446655440002\",\n  \"image_url\": \"https://example.com/invoices/invoice001.jpg\",\n  \"notes\": \"Monthly ingredient purchase\",\n  \"items\": [\n    {\n      \"ingredient_id\": \"550e8400-e29b-41d4-a716-446655440003\",\n      \"detail\": \"Premium Vanilla Extract - 4oz\",\n      \"count\": 2.0,\n      \"unit_type\": \"Units\",\n      \"price\": 12.99,\n      \"expiration_date\": \"2026-01-15T00:00:00Z\"\n    },\n    {\n      \"ingredient_id\": \"550e8400-e29b-41d4-a716-446655440004\",\n      \"detail\": \"Organic Sugar - 5lb\",\n      \"count\": 1.0,\n      \"unit_type\": \"Bag\",\n      \"price\": 8.50\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{invoice_service_url}}/api/v1/invoices",
											"host": ["{{invoice_service_url}}"],
											"path": ["api", "v1", "invoices"]
										},
										"description": "Create a new invoice with multiple items in a single transaction"
									}
								},
								{
									"name": "List Invoices",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{invoice_service_url}}/api/v1/invoices?limit=10&offset=0",
											"host": ["{{invoice_service_url}}"],
											"path": ["api", "v1", "invoices"],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"description": "Number of invoices to return"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of invoices to skip"
												},
												{
													"key": "expense_category_id",
													"value": "",
													"description": "Filter by expense category",
													"disabled": true
												},
												{
													"key": "supplier_id",
													"value": "",
													"description": "Filter by supplier",
													"disabled": true
												}
											]
										},
										"description": "Get a list of invoices with optional filtering"
									}
								},
								{
									"name": "Get Invoice by ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{invoice_service_url}}/api/v1/invoices/{{invoice_id}}",
											"host": ["{{invoice_service_url}}"],
											"path": ["api", "v1", "invoices", "{{invoice_id}}"]
										},
										"description": "Get a specific invoice by ID"
									}
								},
								{
									"name": "Get Invoice by Number",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{invoice_service_url}}/api/v1/invoices/number/INV-2024-001",
											"host": ["{{invoice_service_url}}"],
											"path": ["api", "v1", "invoices", "number", "INV-2024-001"]
										},
										"description": "Get a specific invoice by invoice number"
									}
								},
								{
									"name": "Get Invoice with Details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{invoice_service_url}}/api/v1/invoices/{{invoice_id}}/items",
											"host": ["{{invoice_service_url}}"],
											"path": ["api", "v1", "invoices", "{{invoice_id}}", "items"]
										},
										"description": "Get a invoice with all its line items"
									}
								},
								{
									"name": "Update Invoice",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"invoice_number\": \"INV-2024-001-UPDATED\",\n  \"notes\": \"Updated invoice with new notes\",\n  \"image_url\": \"https://example.com/invoices/invoice001-updated.jpg\"\n}"
										},
										"url": {
											"raw": "{{invoice_service_url}}/api/v1/invoices/{{invoice_id}}",
											"host": ["{{invoice_service_url}}"],
											"path": ["api", "v1", "invoices", "{{invoice_id}}"]
										},
										"description": "Update invoice information (partial updates supported)"
									}
								},
								{
									"name": "Delete Invoice",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{invoice_service_url}}/api/v1/invoices/{{invoice_id}}",
											"host": ["{{invoice_service_url}}"],
											"path": ["api", "v1", "invoices", "{{invoice_id}}"]
										},
										"description": "Delete an invoice (this will also delete all associated invoice details)"
									}
								}
							],
							"description": "Manage invoices and their line items for expense tracking"
						},
						{
							"name": "üìù Invoice Details Management",
							"item": [
								{
									"name": "Add Item to Invoice",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ingredient_id\": \"550e8400-e29b-41d4-a716-446655440005\",\n  \"detail\": \"Chocolate Chips - 2lb bag\",\n  \"count\": 1.0,\n  \"unit_type\": \"Bag\",\n  \"price\": 6.99,\n  \"expiration_date\": \"2025-06-15T00:00:00Z\"\n}"
										},
										"url": {
											"raw": "{{invoice_service_url}}/api/v1/invoices/{{invoice_id}}/items",
											"host": ["{{invoice_service_url}}"],
											"path": ["api", "v1", "invoices", "{{invoice_id}}", "items"]
										},
										"description": "Add a new line item to an existing invoice"
									}
								}
							],
							"description": "Manage individual line items within invoices"
						}
					],
					"description": "Expense management endpoints for invoices and invoice details (port 8085)"
				}
			],
			"description": "Direct service access endpoints for development and debugging (bypasses gateway)"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script for the Ice Cream Store API",
					"console.log('üç¶ Ice Cream Store API Request:', pm.request.name);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script for the Ice Cream Store API",
					"if (pm.response.code >= 400) {",
					"    console.log('‚ùå Request failed:', pm.response.code, pm.response.status);",
					"    console.log('Response:', pm.response.text());",
					"} else {",
					"    console.log('‚úÖ Request successful:', pm.response.code, pm.response.status);",
					"}"
				]
			}
		}
	]
} 